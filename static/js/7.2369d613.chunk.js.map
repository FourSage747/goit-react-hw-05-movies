{"version":3,"file":"static/js/7.2369d613.chunk.js","mappings":"6NA0FA,UApFe,WACb,IAAAA,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAoCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAAwCT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA/CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAb,EAAAA,EAAAA,GAAAW,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,GAAWC,EAAAA,EAAAA,MA2CjB,OA9BAC,EAAAA,EAAAA,YAAU,WACJb,IACAc,EAAAA,EAAAA,IAAgBd,GACfe,MAAK,SAAAC,GACoB,IAAlBA,EAASC,MAMbZ,EAAgBW,EAASC,KAAKC,SAC9BC,aAAaC,QAAQ,SAAUC,KAAKC,UAAUN,EAASC,KAAKC,UAC5DK,QAAQC,IAAIR,IAPZS,IAAAA,OAAAA,QACI,2EAOR,IACCC,OAAM,SAAAC,GACHF,IAAAA,OAAAA,QACA,uDAEAF,QAAQK,MAAMD,EAClB,GAEN,GAAG,CAAC3B,KAEJa,EAAAA,EAAAA,YAAU,WACR,IAAMgB,EAAeV,aAAaW,QAAQ,UACtCD,GACAxB,EAAgBgB,KAAKU,MAAMF,GAEjC,GAAE,KAGAG,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EAIED,EAAAA,EAAAA,MAAA,QAAME,UAAU,aAAaC,SAxCZ,SAAAC,GACnBA,EAAEC,iBACFpC,EAAcL,EAAM0C,OACtB,EAqCwDL,SAAA,EAClDM,EAAAA,EAAAA,KAAA,SACEL,UAAWM,EAAAA,EAAAA,gBACXC,KAAK,OACLC,KAAK,SACLC,YAAY,GACZC,SApDa,SAAHC,GAA+B,IAAfjD,EAAKiD,EAAfC,OAAUlD,MAChCC,EAASD,EAAM0C,QACf5B,EAAgB,CAAC,OAAUd,IAC3B2B,QAAQC,IAAIf,EACd,EAiDQb,MAAOA,KAET2C,EAAAA,EAAAA,KAAA,UAAQE,KAAK,SAASP,UAAWM,EAAAA,EAAAA,iBAAqBP,UACpDM,EAAAA,EAAAA,KAAA,QAAML,UAAU,0BAAyBD,SAAC,iBAG9CM,EAAAA,EAAAA,KAAA,MAAIL,UAAWM,EAAAA,EAAAA,UAAcP,SAC5B7B,GACCA,EAAa2C,KAAI,SAAAC,GACf,OAEIT,EAAAA,EAAAA,KAAA,MAAAN,UACEM,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACf,UAAWM,EAAAA,EAAAA,UAAeU,GAAE,GAAAC,OAAKH,EAAGI,IAAMC,MAAO1C,EAASsB,SAC7De,EAAGM,SAFCN,EAAGI,GAOlB,QAIR,C","sources":["components/pages/Movies.jsx"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getMoviesSearch } from './searchFilms';\nimport css from './CSS.module.css'\n\nconst Movies = () => {\n  const [value, setValue] = useState('');\n  const [searchText, setSearchText] = useState('');\n  const [moviesSearch, setMoviesSearch] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation()\n\n  const handleChange = ({ target: { value } }) => {\n    setValue(value.trim());\n    setSearchParams({'search': value})\n    console.log(searchParams)\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchText(value.trim());\n  };\n\n  useEffect(() => {\n    if (searchText) {\n        getMoviesSearch(searchText)\n        .then(response => {\n            if (response.data === 0) {\n            Notiflix.Notify.failure(\n                'Sorry, there are no images matching your search query. Please try again.'\n            );\n            return;\n            }\n            setMoviesSearch(response.data.results);\n            localStorage.setItem('result', JSON.stringify(response.data.results))\n            console.log(response)\n        })\n        .catch(err => {\n            Notiflix.Notify.failure(\n            'Oops! Something went wrong! Try reloading the page!'\n            );\n            console.error(err);\n        });\n    }\n  }, [searchText]);\n\n  useEffect(()=>{\n    const parsedSearch = localStorage.getItem('result');\n    if (parsedSearch) {\n        setMoviesSearch(JSON.parse(parsedSearch))\n    }\n  },[])\n\n  return (\n    <div>\n      {/* <div className={css.goback}>\n        <Link className={css.gobacklink} to='/'>Go back</Link>\n      </div> */}\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <input\n          className={css.searchForminput}\n          type=\"text\"\n          name=\"search\"\n          placeholder=\"\"\n          onChange={handleChange}\n          value={value}\n        />\n        <button type=\"submit\" className={css.searchFormbutton}>\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n      </form>\n      <ul className={css.homefilms}>\n      {moviesSearch &&\n        moviesSearch.map(el => {\n          return (\n          \n              <li key={el.id}>\n                <Link className={css.linkfilms} to={`${el.id}`} state={location}>\n                  {el.title}\n                </Link>\n              </li>\n            \n          );\n        })}\n        </ul>\n    </div>\n  );\n};\n\nexport default Movies"],"names":["_useState","useState","_useState2","_slicedToArray","value","setValue","_useState3","_useState4","searchText","setSearchText","_useState5","_useState6","moviesSearch","setMoviesSearch","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","useEffect","getMoviesSearch","then","response","data","results","localStorage","setItem","JSON","stringify","console","log","Notiflix","catch","err","error","parsedSearch","getItem","parse","_jsxs","children","className","onSubmit","e","preventDefault","trim","_jsx","css","type","name","placeholder","onChange","_ref","target","map","el","Link","to","concat","id","state","title"],"sourceRoot":""}